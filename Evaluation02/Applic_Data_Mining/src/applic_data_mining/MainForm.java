/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applic_data_mining;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import static java.lang.Math.abs;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JDialog;
import org.apache.commons.math3.stat.inference.OneWayAnova;
import org.apache.commons.math3.stat.inference.TTest;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.statistics.Statistics;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Julien
 */
public class MainForm extends javax.swing.JFrame
{
    private ArrayList<Mais> ListMais = new ArrayList<>();
    private DecimalFormat df = new DecimalFormat("0.##");
    private int TailleParcelleNord = 0;
    private int TailleParcelleSud = 0;
    private int TailleParcelleEst = 0;
    private int TailleParcelleOuest = 0;
    /**
     * Creates new form MainForm
     */
    public MainForm() 
    {
        initComponents();
        ParseFichierMais();
        SplitListMais();
    }
    
    private void ParseFichierMais()
    {
        InputStream is = null; 
        try
        {
            is = new FileInputStream("mais.txt");
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader br = new BufferedReader(isr);
            String ligne;
            while ((ligne = br.readLine())!=null)
                ListMais.add(new Mais(ligne));
            br.close();
        }
        catch (FileNotFoundException ex)
        { 
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex)
        {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally 
        {
            try
            {
                is.close();
            } 
            catch (IOException ex)
            {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void SplitListMais()
    {
        ArrayList<Mais> listMaisNord = new ArrayList<>();
        ArrayList<Mais> listMaisSud = new ArrayList<>();
        ArrayList<Mais> listMaisEst = new ArrayList<>();
        ArrayList<Mais> listMaisOuest = new ArrayList<>();
        
        for (Mais m : ListMais)
        {
            /* On vérifie uniquement ces variables car ce sont celles utilisées pour répondre aux questions */
            if(!m.getHauteur().equals("NA"))
            {
                if(m.getParcelle().equals("Nord"))
                    listMaisNord.add(m);
                else if(m.getParcelle().equals("Sud"))
                    listMaisSud.add(m);
                else if(m.getParcelle().equals("Est"))
                    listMaisEst.add(m);
                else
                    listMaisOuest.add(m);
            }
        }
        TailleParcelleNord = listMaisNord.size();
        TailleParcelleSud = listMaisSud.size();
        TailleParcelleEst = listMaisEst.size();
        TailleParcelleOuest = listMaisOuest.size();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBienvenue = new javax.swing.JLabel();
        pnlQuestion4 = new javax.swing.JPanel();
        lblQuestion4 = new javax.swing.JLabel();
        btnTestQuestion4 = new javax.swing.JButton();
        lblPValueQ4 = new javax.swing.JLabel();
        tfdPValueQ4 = new javax.swing.JTextField();
        lblDecisionQ4 = new javax.swing.JLabel();
        tfdDecisionQ4 = new javax.swing.JTextField();
        pnlQuestion2 = new javax.swing.JPanel();
        lblQuestion2 = new javax.swing.JLabel();
        btnTestQuestion2 = new javax.swing.JButton();
        lblPValueQ2 = new javax.swing.JLabel();
        tfdPValueQ2 = new javax.swing.JTextField();
        lblDecisionQ2 = new javax.swing.JLabel();
        tfdDecisionQ2 = new javax.swing.JTextField();
        pnlQuestion3 = new javax.swing.JPanel();
        lblQuestion3 = new javax.swing.JLabel();
        btnTestQuestion3 = new javax.swing.JButton();
        lblPValueQ3 = new javax.swing.JLabel();
        tfdPValueQ3 = new javax.swing.JTextField();
        lblDecisionQ3 = new javax.swing.JLabel();
        tfdDecisionQ3 = new javax.swing.JTextField();
        pnlQuestion7 = new javax.swing.JPanel();
        lblQuestion7 = new javax.swing.JLabel();
        btnTestQuestion7 = new javax.swing.JButton();
        lblEquationDroiteQ7 = new javax.swing.JLabel();
        tfdEquationDroiteQ7 = new javax.swing.JTextField();
        lblCoefficientCorrelationQ7 = new javax.swing.JLabel();
        tfdCoefficientCorrelationQ7 = new javax.swing.JTextField();
        lblConstatationsQ7 = new javax.swing.JLabel();
        tfdConstatationsQ7 = new javax.swing.JTextField();
        pnlQuestion1 = new javax.swing.JPanel();
        lblQuestion1 = new javax.swing.JLabel();
        btnTestQuestion1 = new javax.swing.JButton();
        lblPValueQ1 = new javax.swing.JLabel();
        lblDecisionQ1 = new javax.swing.JLabel();
        tfdPValueQ1 = new javax.swing.JTextField();
        tfdDecisionQ1 = new javax.swing.JTextField();
        pnlQuestion6 = new javax.swing.JPanel();
        lblQuestion6 = new javax.swing.JLabel();
        btnTestQuestion6 = new javax.swing.JButton();
        lblEquationDroiteQ6 = new javax.swing.JLabel();
        tfdEquationDroiteQ6 = new javax.swing.JTextField();
        lblCoefficientCorrelationQ6 = new javax.swing.JLabel();
        tfdCoefficientCorrelationQ6 = new javax.swing.JTextField();
        lblConstatationsQ6 = new javax.swing.JLabel();
        tfdConstatationsQ6 = new javax.swing.JTextField();
        pnlQuestion5 = new javax.swing.JPanel();
        lblQuestion5 = new javax.swing.JLabel();
        btnTestQuestion5 = new javax.swing.JButton();
        lbEquationDroiteQ5 = new javax.swing.JLabel();
        tfdEquationDroiteQ5 = new javax.swing.JTextField();
        lblCoefficientCorrelationQ5 = new javax.swing.JLabel();
        tfdCoefficientCorrelationQ5 = new javax.swing.JTextField();
        lblConstatationsQ5 = new javax.swing.JLabel();
        tfdConstatationsQ5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblBienvenue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBienvenue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBienvenue.setText("Bienvenue sur Applic_Data_Mining");

        pnlQuestion4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblQuestion4.setText("4. La hauteur des pieds est-elle similaire pour les 4 parcelles, quel que soit l'enracinement ?");

        btnTestQuestion4.setText("Lancer le test de conformité");
        btnTestQuestion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestQuestion4ActionPerformed(evt);
            }
        });

        lblPValueQ4.setText("Valeur-p : ");

        tfdPValueQ4.setEnabled(false);

        lblDecisionQ4.setText("Décision : ");

        tfdDecisionQ4.setEnabled(false);

        javax.swing.GroupLayout pnlQuestion4Layout = new javax.swing.GroupLayout(pnlQuestion4);
        pnlQuestion4.setLayout(pnlQuestion4Layout);
        pnlQuestion4Layout.setHorizontalGroup(
            pnlQuestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuestion4, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                    .addComponent(btnTestQuestion4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlQuestion4Layout.createSequentialGroup()
                        .addComponent(lblDecisionQ4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdDecisionQ4))
                    .addGroup(pnlQuestion4Layout.createSequentialGroup()
                        .addComponent(lblPValueQ4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdPValueQ4)))
                .addContainerGap())
        );
        pnlQuestion4Layout.setVerticalGroup(
            pnlQuestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestion4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestQuestion4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPValueQ4)
                    .addComponent(tfdPValueQ4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlQuestion4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDecisionQ4)
                    .addComponent(tfdDecisionQ4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlQuestion2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlQuestion2.setPreferredSize(new java.awt.Dimension(458, 152));

        lblQuestion2.setText("2. La hauteur des pieds est-elle similaire pour les parcelles Nord et Sud ?");

        btnTestQuestion2.setText("Lancer le test d'homogénéité");
        btnTestQuestion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestQuestion2ActionPerformed(evt);
            }
        });

        lblPValueQ2.setText("Valeur-p : ");

        tfdPValueQ2.setEnabled(false);

        lblDecisionQ2.setText("Décision : ");

        tfdDecisionQ2.setEnabled(false);

        javax.swing.GroupLayout pnlQuestion2Layout = new javax.swing.GroupLayout(pnlQuestion2);
        pnlQuestion2.setLayout(pnlQuestion2Layout);
        pnlQuestion2Layout.setHorizontalGroup(
            pnlQuestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTestQuestion2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlQuestion2Layout.createSequentialGroup()
                        .addComponent(lblPValueQ2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdPValueQ2))
                    .addGroup(pnlQuestion2Layout.createSequentialGroup()
                        .addComponent(lblDecisionQ2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdDecisionQ2))
                    .addComponent(lblQuestion2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlQuestion2Layout.setVerticalGroup(
            pnlQuestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestion2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestQuestion2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPValueQ2)
                    .addComponent(tfdPValueQ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlQuestion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDecisionQ2)
                    .addComponent(tfdDecisionQ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pnlQuestion3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlQuestion3.setPreferredSize(new java.awt.Dimension(318, 152));

        lblQuestion3.setText("3. La hauteur des pieds est-elle similaire pour les 4 parcelles ?");

        btnTestQuestion3.setText("Lancer le test ANOVA");
        btnTestQuestion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestQuestion3ActionPerformed(evt);
            }
        });

        lblPValueQ3.setText("Valeur-p : ");

        tfdPValueQ3.setEnabled(false);

        lblDecisionQ3.setText("Décision : ");

        tfdDecisionQ3.setEnabled(false);

        javax.swing.GroupLayout pnlQuestion3Layout = new javax.swing.GroupLayout(pnlQuestion3);
        pnlQuestion3.setLayout(pnlQuestion3Layout);
        pnlQuestion3Layout.setHorizontalGroup(
            pnlQuestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuestion3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTestQuestion3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlQuestion3Layout.createSequentialGroup()
                        .addComponent(lblPValueQ3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdPValueQ3))
                    .addGroup(pnlQuestion3Layout.createSequentialGroup()
                        .addComponent(lblDecisionQ3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdDecisionQ3)))
                .addContainerGap())
        );
        pnlQuestion3Layout.setVerticalGroup(
            pnlQuestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestion3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestQuestion3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlQuestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPValueQ3)
                    .addComponent(tfdPValueQ3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlQuestion3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDecisionQ3)
                    .addComponent(tfdDecisionQ3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pnlQuestion7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlQuestion7.setPreferredSize(new java.awt.Dimension(463, 152));

        lblQuestion7.setText("7. Les variantes des hauteurs des pieds sont-elles similaires pour les parcelles Nord et Sud ?");

        btnTestQuestion7.setText("Lancer le test");
        btnTestQuestion7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestQuestion7ActionPerformed(evt);
            }
        });

        lblEquationDroiteQ7.setText("Equation de la droite : ");

        tfdEquationDroiteQ7.setEnabled(false);

        lblCoefficientCorrelationQ7.setText("Coefficient de corrélation : ");

        tfdCoefficientCorrelationQ7.setEnabled(false);

        lblConstatationsQ7.setText("Constatations : ");

        tfdConstatationsQ7.setEnabled(false);

        javax.swing.GroupLayout pnlQuestion7Layout = new javax.swing.GroupLayout(pnlQuestion7);
        pnlQuestion7.setLayout(pnlQuestion7Layout);
        pnlQuestion7Layout.setHorizontalGroup(
            pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuestion7Layout.createSequentialGroup()
                        .addComponent(lblQuestion7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnTestQuestion7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlQuestion7Layout.createSequentialGroup()
                        .addGroup(pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblCoefficientCorrelationQ7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblEquationDroiteQ7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblConstatationsQ7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfdEquationDroiteQ7)
                            .addComponent(tfdCoefficientCorrelationQ7)
                            .addComponent(tfdConstatationsQ7))))
                .addContainerGap())
        );
        pnlQuestion7Layout.setVerticalGroup(
            pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestion7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestQuestion7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEquationDroiteQ7)
                    .addComponent(tfdEquationDroiteQ7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdCoefficientCorrelationQ7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCoefficientCorrelationQ7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdConstatationsQ7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConstatationsQ7))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pnlQuestion1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlQuestion1.setPreferredSize(new java.awt.Dimension(329, 152));

        lblQuestion1.setText("1. La hauteur des pieds est-elle de 265 cm pour la parcelle Est ?");

        btnTestQuestion1.setText("Lancer le test de conformité");
        btnTestQuestion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestQuestion1ActionPerformed(evt);
            }
        });

        lblPValueQ1.setText("Valeur-p : ");

        lblDecisionQ1.setText("Décision : ");

        tfdPValueQ1.setEnabled(false);

        tfdDecisionQ1.setEnabled(false);

        javax.swing.GroupLayout pnlQuestion1Layout = new javax.swing.GroupLayout(pnlQuestion1);
        pnlQuestion1.setLayout(pnlQuestion1Layout);
        pnlQuestion1Layout.setHorizontalGroup(
            pnlQuestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuestion1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                    .addComponent(btnTestQuestion1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlQuestion1Layout.createSequentialGroup()
                        .addComponent(lblDecisionQ1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdDecisionQ1))
                    .addGroup(pnlQuestion1Layout.createSequentialGroup()
                        .addComponent(lblPValueQ1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdPValueQ1)))
                .addContainerGap())
        );
        pnlQuestion1Layout.setVerticalGroup(
            pnlQuestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestion1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestQuestion1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPValueQ1)
                    .addComponent(tfdPValueQ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlQuestion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDecisionQ1)
                    .addComponent(tfdDecisionQ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pnlQuestion6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlQuestion6.setPreferredSize(new java.awt.Dimension(463, 152));

        lblQuestion6.setText("6. Le nombre de grains dépend-t-il de la hauteur ?");

        btnTestQuestion6.setText("Lancer le test");
        btnTestQuestion6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestQuestion6ActionPerformed(evt);
            }
        });

        lblEquationDroiteQ6.setText("Equation de la droite : ");

        tfdEquationDroiteQ6.setEnabled(false);

        lblCoefficientCorrelationQ6.setText("Coefficient de corrélation : ");

        tfdCoefficientCorrelationQ6.setEnabled(false);

        lblConstatationsQ6.setText("Constatations : ");

        tfdConstatationsQ6.setEnabled(false);

        javax.swing.GroupLayout pnlQuestion6Layout = new javax.swing.GroupLayout(pnlQuestion6);
        pnlQuestion6.setLayout(pnlQuestion6Layout);
        pnlQuestion6Layout.setHorizontalGroup(
            pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuestion6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTestQuestion6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlQuestion6Layout.createSequentialGroup()
                        .addGroup(pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblCoefficientCorrelationQ6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblEquationDroiteQ6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblConstatationsQ6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfdEquationDroiteQ6)
                            .addComponent(tfdCoefficientCorrelationQ6)
                            .addComponent(tfdConstatationsQ6))))
                .addContainerGap())
        );
        pnlQuestion6Layout.setVerticalGroup(
            pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestion6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestQuestion6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEquationDroiteQ6)
                    .addComponent(tfdEquationDroiteQ6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdCoefficientCorrelationQ6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCoefficientCorrelationQ6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdConstatationsQ6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConstatationsQ6))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pnlQuestion5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblQuestion5.setText("5. La hauteur dépend-t-elle de la masse dans la parcelle Est ?");

        btnTestQuestion5.setText("Lancer le test");
        btnTestQuestion5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestQuestion5ActionPerformed(evt);
            }
        });

        lbEquationDroiteQ5.setText("Equation de la droite : ");

        tfdEquationDroiteQ5.setEnabled(false);

        lblCoefficientCorrelationQ5.setText("Coefficient de corrélation : ");

        tfdCoefficientCorrelationQ5.setEnabled(false);

        lblConstatationsQ5.setText("Constatations : ");

        tfdConstatationsQ5.setEnabled(false);

        javax.swing.GroupLayout pnlQuestion5Layout = new javax.swing.GroupLayout(pnlQuestion5);
        pnlQuestion5.setLayout(pnlQuestion5Layout);
        pnlQuestion5Layout.setHorizontalGroup(
            pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuestion5Layout.createSequentialGroup()
                        .addComponent(btnTestQuestion5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlQuestion5Layout.createSequentialGroup()
                        .addComponent(lblQuestion5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(50, 50, 50))
                    .addGroup(pnlQuestion5Layout.createSequentialGroup()
                        .addGroup(pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblCoefficientCorrelationQ5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbEquationDroiteQ5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblConstatationsQ5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfdEquationDroiteQ5)
                            .addComponent(tfdCoefficientCorrelationQ5)
                            .addComponent(tfdConstatationsQ5))
                        .addContainerGap())))
        );
        pnlQuestion5Layout.setVerticalGroup(
            pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestion5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestion5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestQuestion5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEquationDroiteQ5)
                    .addComponent(tfdEquationDroiteQ5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdCoefficientCorrelationQ5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCoefficientCorrelationQ5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQuestion5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdConstatationsQ5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConstatationsQ5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlQuestion7, javax.swing.GroupLayout.DEFAULT_SIZE, 927, Short.MAX_VALUE)
                    .addComponent(lblBienvenue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pnlQuestion2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlQuestion3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                            .addComponent(pnlQuestion1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlQuestion4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlQuestion5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlQuestion6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBienvenue)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlQuestion1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlQuestion4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlQuestion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlQuestion5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlQuestion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlQuestion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlQuestion7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestQuestion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestQuestion1ActionPerformed
        /*
            Question 1. La hauteur des pieds est-elle de 265 cm pour la parcelle Est ?
        */
        
        ArrayList<Mais> listMaisEst = new ArrayList<>();
        
        for (Mais m : ListMais)
        {
            if(m.getParcelle().equals("Est") && !m.getHauteur().equals("NA"))
                listMaisEst.add(m);
        }
        
        double[] arrayEchantillons = new double[listMaisEst.size()];
        
        for(int i = 0; i < listMaisEst.size(); i++)
        {
            Mais m = listMaisEst.get(i);
            arrayEchantillons[i] = Double.parseDouble(m.getHauteur());
        }
        
        TTest t = new TTest();
        double pValue = t.tTest(265, arrayEchantillons);
        
        tfdPValueQ1.setText(String.valueOf(pValue));
        
        if(pValue < 0.0025)
            tfdDecisionQ1.setText("L'hypothèse nulle est rejetée !");
        else
            tfdDecisionQ1.setText("L'hypothèse nulle est acceptée !");
    }//GEN-LAST:event_btnTestQuestion1ActionPerformed

    private void btnTestQuestion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestQuestion2ActionPerformed
        /*
            Question 2. La hauteur des pieds est-elle similaire pour les parcelles Nord et Sud ?
        */
        
        ArrayList<Mais> listMaisNord = new ArrayList<>();
        ArrayList<Mais> listMaisSud = new ArrayList<>();
        
        for (Mais m : ListMais)
        {
            if(!m.getHauteur().equals("NA"))
            {
                if(m.getParcelle().equals("Nord"))
                    listMaisNord.add(m);
                else
                {
                    if(m.getParcelle().equals("Sud"))
                        listMaisSud.add(m);
                }
            }
        }
        
        int iTailleMax = listMaisNord.size();
        if(iTailleMax > listMaisSud.size())
            iTailleMax = listMaisSud.size();
        
        double[] arrayEchantillonsNord = new double[iTailleMax];
        double[] arrayEchantillonsSud = new double[iTailleMax];
        
        for(int i = 0; i < iTailleMax; i++)
        {
            Mais m = listMaisNord.get(i);
            arrayEchantillonsNord[i] = Double.parseDouble(m.getHauteur());
        }
        
        for(int i = 0; i < iTailleMax; i++)
        {
            Mais m = listMaisSud.get(i);
            arrayEchantillonsSud[i] = Double.parseDouble(m.getHauteur());
        }
        
        TTest t = new TTest();
        double pValue = t.tTest(arrayEchantillonsNord, arrayEchantillonsSud);
        
        tfdPValueQ2.setText(String.valueOf(pValue));
        
        if(pValue < 0.0025)
            tfdDecisionQ2.setText("L'hypothèse nulle est rejetée !");
        else
            tfdDecisionQ2.setText("L'hypothèse nulle est acceptée !");
    }//GEN-LAST:event_btnTestQuestion2ActionPerformed

    private void btnTestQuestion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestQuestion3ActionPerformed
        /*
            Question 3. La hauteur des pieds est-elle similaire pour les 4 parcelles ?
        */
        
        ArrayList<double[]> listEchantillons = new ArrayList<>();
        ArrayList<Mais> listMaisNord = new ArrayList<>();
        ArrayList<Mais> listMaisSud = new ArrayList<>();
        ArrayList<Mais> listMaisEst = new ArrayList<>();
        ArrayList<Mais> listMaisOuest = new ArrayList<>();
        
        for (Mais m : ListMais)
        {
            if(!m.getHauteur().equals("NA"))
            {
                if(m.getParcelle().equals("Nord"))
                    listMaisNord.add(m);
                else if(m.getParcelle().equals("Sud"))
                    listMaisSud.add(m);
                else if(m.getParcelle().equals("Est"))
                    listMaisEst.add(m);
                else
                    listMaisOuest.add(m);
            }
        }
        
        int iTailleMax = listMaisNord.size();
        if(listMaisSud.size() < iTailleMax)
            iTailleMax = listMaisSud.size();
        else if(listMaisEst.size() < iTailleMax)
            iTailleMax = listMaisEst.size();
        else
        {
            if(listMaisOuest.size() < iTailleMax)
                iTailleMax = listMaisOuest.size();
        }
        
        double[] arrayEchantillons = new double[iTailleMax];
        
        for(int i = 0; i < iTailleMax; i++)
        {
            Mais m = listMaisNord.get(i);
            arrayEchantillons[i] = Double.parseDouble(m.getHauteur());
        }
        
        listEchantillons.add(arrayEchantillons);
        arrayEchantillons = new double[iTailleMax];
        
        for(int i = 0; i < iTailleMax; i++)
        {
            Mais m = listMaisSud.get(i);
            arrayEchantillons[i] = Double.parseDouble(m.getHauteur());
        }
        
        listEchantillons.add(arrayEchantillons);
        arrayEchantillons = new double[iTailleMax];
        
        for(int i = 0; i < iTailleMax; i++)
        {
            Mais m = listMaisEst.get(i);
            arrayEchantillons[i] = Double.parseDouble(m.getHauteur());
        }
        
        listEchantillons.add(arrayEchantillons);
        arrayEchantillons = new double[iTailleMax];
        
        for(int i = 0; i < iTailleMax; i++)
        {
            Mais m = listMaisOuest.get(i);
            arrayEchantillons[i] = Double.parseDouble(m.getHauteur());
        }
        
        listEchantillons.add(arrayEchantillons);
        
        OneWayAnova OWA = new OneWayAnova();
        double pValue = OWA.anovaPValue(listEchantillons);
        
        tfdPValueQ3.setText(String.valueOf(pValue));
        
        if(pValue < 0.0025)
            tfdDecisionQ3.setText("L'hypothèse nulle est rejetée !");
        else
            tfdDecisionQ3.setText("L'hypothèse nulle est acceptée !");
    }//GEN-LAST:event_btnTestQuestion3ActionPerformed

    private void btnTestQuestion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestQuestion4ActionPerformed
        /*
            Question 4. La hauteur des pieds est-elle similaire pour les 4 parcelles, quel que soit l'enracinement ?
        */
        
        
    }//GEN-LAST:event_btnTestQuestion4ActionPerformed

    private void btnTestQuestion5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestQuestion5ActionPerformed
        /*
            Question 5. La hauteur dépend-t-elle de la masse dans la parcelle Est ?
        */
        
        ArrayList<Mais> listMaisEst = new ArrayList<>();
        
        for (Mais m : ListMais)
        {
            if(!m.getHauteur().equals("NA") && !m.getMasse().equals("NA") && m.getParcelle().equals("Est"))
                listMaisEst.add(m);
        }
        
        Number[] arrayHauteurs = new Double[listMaisEst.size()];
        Number[] arrayMasses = new Double[listMaisEst.size()];
        
        XYSeries xys = new XYSeries("Relation hauteur/masse parcelle Est");
        
        for(int i = 0; i < listMaisEst.size(); i++)
        {
            Mais m = listMaisEst.get(i);
            arrayHauteurs[i] = Double.parseDouble(m.getHauteur());
            arrayMasses[i] = Double.parseDouble(m.getMasse());
            xys.add(arrayHauteurs[i], arrayMasses[i]);
        }
        
        XYSeriesCollection xysc = new XYSeriesCollection();
        xysc.addSeries(xys);
        
        JFreeChart jfc = ChartFactory.createScatterPlot("Comparaison entre la hauteur et la masse dans la parcelle Est", 
                        "Hauteur",
                        "Masse",
                        xysc,
                        PlotOrientation.VERTICAL,
                        true, true, false);
        
        double[] droiteRegression = Statistics.getLinearFit(arrayHauteurs, arrayMasses);
        double a = droiteRegression[1];
        double b = droiteRegression[0];

        tfdEquationDroiteQ5.setText("y = " + df.format(a) + "x + " + df.format(b));

        double r = Statistics.getCorrelation(arrayHauteurs, arrayMasses);
        tfdCoefficientCorrelationQ5.setText(String.valueOf(r));
        
        if(abs(r) < 0.1)
            tfdConstatationsQ5.setText("Aucun lien ou très faible");
        else if(abs(r) < 0.3)
            tfdConstatationsQ5.setText("Lien faible");
        else if(abs(r) < 0.5)
            tfdConstatationsQ5.setText("Lien modéré");
        else if(abs(r) < 0.7)
            tfdConstatationsQ5.setText("Lien fort");
        else
            tfdConstatationsQ5.setText("Lien très fort");
        
        ChartPanel cp = new ChartPanel(jfc);
        JDialog GraphForm = new JDialog(this, true);
        GraphForm.setSize(1024, 768);
        GraphForm.setContentPane(cp);
        GraphForm.setTitle("Comparaison entre la hauteur et la masse dans la parcelle Est");
        GraphForm.setVisible(true);
    }//GEN-LAST:event_btnTestQuestion5ActionPerformed

    private void btnTestQuestion6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestQuestion6ActionPerformed
        /*
            Question 6. Le nombre de grains dépend-t-il de la hauteur ?
        */
        
        ArrayList<Mais> listMais = new ArrayList<>();
        
        for (Mais m : ListMais)
        {
            if(!m.getHauteur().equals("NA") && !m.getNombreGrains().equals("NA"))
                listMais.add(m);
        }
        
        Number[] arrayHauteurs = new Double[listMais.size()];
        Number[] arrayNombreGrains = new Double[listMais.size()];
        
        XYSeries xys = new XYSeries("Relation hauteur/masse parcelle Est");
        
        for(int i = 0; i < listMais.size(); i++)
        {
            Mais m = listMais.get(i);
            arrayHauteurs[i] = Double.parseDouble(m.getHauteur());
            arrayNombreGrains[i] = Double.parseDouble(m.getNombreGrains());
            xys.add(arrayHauteurs[i], arrayNombreGrains[i]);
        }
        
        XYSeriesCollection xysc = new XYSeriesCollection();
        xysc.addSeries(xys);
        
        JFreeChart jfc = ChartFactory.createScatterPlot("Comparaison entre le nombre de grains et la hauteur", 
                        "Hauteur",
                        "Nombre de grains",
                        xysc,
                        PlotOrientation.VERTICAL,
                        true, true, false);
        
        double[] droiteRegression = Statistics.getLinearFit(arrayHauteurs, arrayNombreGrains);
        double a = droiteRegression[1];
        double b = droiteRegression[0];

        tfdEquationDroiteQ6.setText("y = " + df.format(a) + "x + " + df.format(b));

        double r = Statistics.getCorrelation(arrayHauteurs, arrayNombreGrains);
        tfdCoefficientCorrelationQ6.setText(String.valueOf(r));
        
        if(abs(r) < 0.1)
            tfdConstatationsQ6.setText("Aucun lien ou très faible");
        else if(abs(r) < 0.3)
            tfdConstatationsQ6.setText("Lien faible");
        else if(abs(r) < 0.5)
            tfdConstatationsQ6.setText("Lien modéré");
        else if(abs(r) < 0.7)
            tfdConstatationsQ6.setText("Lien fort");
        else
            tfdConstatationsQ6.setText("Lien très fort");
        
        ChartPanel cp = new ChartPanel(jfc);
        JDialog GraphForm = new JDialog(this, true);
        GraphForm.setSize(1024, 768);
        GraphForm.setContentPane(cp);
        GraphForm.setTitle("Comparaison entre le nombre de grains et la hauteur");
        GraphForm.setVisible(true);
    }//GEN-LAST:event_btnTestQuestion6ActionPerformed

    private void btnTestQuestion7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestQuestion7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTestQuestion7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTestQuestion1;
    private javax.swing.JButton btnTestQuestion2;
    private javax.swing.JButton btnTestQuestion3;
    private javax.swing.JButton btnTestQuestion4;
    private javax.swing.JButton btnTestQuestion5;
    private javax.swing.JButton btnTestQuestion6;
    private javax.swing.JButton btnTestQuestion7;
    private javax.swing.JLabel lbEquationDroiteQ5;
    private javax.swing.JLabel lblBienvenue;
    private javax.swing.JLabel lblCoefficientCorrelationQ5;
    private javax.swing.JLabel lblCoefficientCorrelationQ6;
    private javax.swing.JLabel lblCoefficientCorrelationQ7;
    private javax.swing.JLabel lblConstatationsQ5;
    private javax.swing.JLabel lblConstatationsQ6;
    private javax.swing.JLabel lblConstatationsQ7;
    private javax.swing.JLabel lblDecisionQ1;
    private javax.swing.JLabel lblDecisionQ2;
    private javax.swing.JLabel lblDecisionQ3;
    private javax.swing.JLabel lblDecisionQ4;
    private javax.swing.JLabel lblEquationDroiteQ6;
    private javax.swing.JLabel lblEquationDroiteQ7;
    private javax.swing.JLabel lblPValueQ1;
    private javax.swing.JLabel lblPValueQ2;
    private javax.swing.JLabel lblPValueQ3;
    private javax.swing.JLabel lblPValueQ4;
    private javax.swing.JLabel lblQuestion1;
    private javax.swing.JLabel lblQuestion2;
    private javax.swing.JLabel lblQuestion3;
    private javax.swing.JLabel lblQuestion4;
    private javax.swing.JLabel lblQuestion5;
    private javax.swing.JLabel lblQuestion6;
    private javax.swing.JLabel lblQuestion7;
    private javax.swing.JPanel pnlQuestion1;
    private javax.swing.JPanel pnlQuestion2;
    private javax.swing.JPanel pnlQuestion3;
    private javax.swing.JPanel pnlQuestion4;
    private javax.swing.JPanel pnlQuestion5;
    private javax.swing.JPanel pnlQuestion6;
    private javax.swing.JPanel pnlQuestion7;
    private javax.swing.JTextField tfdCoefficientCorrelationQ5;
    private javax.swing.JTextField tfdCoefficientCorrelationQ6;
    private javax.swing.JTextField tfdCoefficientCorrelationQ7;
    private javax.swing.JTextField tfdConstatationsQ5;
    private javax.swing.JTextField tfdConstatationsQ6;
    private javax.swing.JTextField tfdConstatationsQ7;
    private javax.swing.JTextField tfdDecisionQ1;
    private javax.swing.JTextField tfdDecisionQ2;
    private javax.swing.JTextField tfdDecisionQ3;
    private javax.swing.JTextField tfdDecisionQ4;
    private javax.swing.JTextField tfdEquationDroiteQ5;
    private javax.swing.JTextField tfdEquationDroiteQ6;
    private javax.swing.JTextField tfdEquationDroiteQ7;
    private javax.swing.JTextField tfdPValueQ1;
    private javax.swing.JTextField tfdPValueQ2;
    private javax.swing.JTextField tfdPValueQ3;
    private javax.swing.JTextField tfdPValueQ4;
    // End of variables declaration//GEN-END:variables
}
