/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applic_data_analysis;

import RequeteReponsePIDEP.ReponsePIDEP;
import RequeteReponsePIDEP.RequetePIDEP;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Julien
 */
public class DiagrammeSectorielForm extends javax.swing.JDialog 
{
    private Socket CSocket;
    /**
     * Creates new form GetStatDescrContForm
     */
    public DiagrammeSectorielForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Répartition des containers par destinations");
    }
    
    public DiagrammeSectorielForm(java.awt.Frame parent, boolean modal, Socket CSocket)
    {
        super(parent, modal);
        initComponents();
        this.CSocket = CSocket;
        this.setTitle("Répartition des containers par destinations");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMoisAnnee = new javax.swing.JLabel();
        btnAfficherGraphiqueMois = new javax.swing.JButton();
        lblMoisAnnee1 = new javax.swing.JLabel();
        cbxMois = new javax.swing.JComboBox();
        cbxAnnee = new javax.swing.JComboBox();
        btnAfficherGraphiqueAnnee = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblMoisAnnee.setText("Sélectionnez une année : ");

        btnAfficherGraphiqueMois.setText("Afficher le graphique par mois");
        btnAfficherGraphiqueMois.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfficherGraphiqueMoisActionPerformed(evt);
            }
        });

        lblMoisAnnee1.setText("Selectionnez un mois : ");

        cbxMois.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbxAnnee.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAfficherGraphiqueAnnee.setText("Afficher le graphique par année");
        btnAfficherGraphiqueAnnee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfficherGraphiqueAnneeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAfficherGraphiqueMois, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMoisAnnee)
                            .addComponent(lblMoisAnnee1))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxMois, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxAnnee, 0, 189, Short.MAX_VALUE)))
                    .addComponent(btnAfficherGraphiqueAnnee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMoisAnnee1)
                    .addComponent(cbxMois, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMoisAnnee)
                    .addComponent(cbxAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAfficherGraphiqueMois)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAfficherGraphiqueAnnee)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAfficherGraphiqueMoisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfficherGraphiqueMoisActionPerformed
        String strRequete = "MOIS#" + (String)cbxMois.getSelectedItem() + "#" + (String)cbxAnnee.getSelectedItem();
        String strMoisAnnee = (String)cbxMois.getSelectedItem() + " " + (String)cbxAnnee.getSelectedItem();
            
        try 
        {
            ObjectOutputStream oos = new ObjectOutputStream(CSocket.getOutputStream());
            RequetePIDEP req = new RequetePIDEP(RequetePIDEP.REQUEST_GET_GR_CONT_REP, strRequete);
            oos.writeObject(req);
            oos.flush();

            ObjectInputStream ois = new ObjectInputStream(CSocket.getInputStream());
            ReponsePIDEP rep = (ReponsePIDEP)ois.readObject();

            if(rep.getCode() == ReponsePIDEP.REPONSE_KO)
                JOptionPane.showMessageDialog(this, (String)rep.getResult());
            else
            {
                HashMap hmList = (HashMap)rep.getResult();
                ArrayList<String> listDestinations = (ArrayList<String>)hmList.get("DESTINATION");
                ArrayList<Short> listCount = (ArrayList<Short>)hmList.get("COUNT");
                
                System.out.println("Taille Destination = " + listDestinations.size() + " =?= " + listCount.size());
                
                DefaultPieDataset dpds = new DefaultPieDataset();
                for(int i = 0; i < listCount.size(); i++)
                    dpds.setValue(listDestinations.get(i), listCount.get(i));
                
                JFreeChart jfc = ChartFactory.createPieChart("Répartition du nombre de containers par destination pour le " + strMoisAnnee,
                        dpds, true, true, true);
                
                ChartPanel cp = new ChartPanel(jfc);
                JDialog GraphForm = new JDialog(this, true);
                GraphForm.setSize(500, 500);
                GraphForm.setContentPane(cp);
                GraphForm.setTitle("Répartition des containers par destinations");
                GraphForm.setVisible(true);
            }
        }
        catch (IOException ex)
        {
            Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (ClassNotFoundException ex)
        {
            Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAfficherGraphiqueMoisActionPerformed

    private void btnAfficherGraphiqueAnneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfficherGraphiqueAnneeActionPerformed
        String strRequete = "ANNEE#" + (String)cbxAnnee.getSelectedItem();
            
        try 
        {
            ObjectOutputStream oos = new ObjectOutputStream(CSocket.getOutputStream());
            RequetePIDEP req = new RequetePIDEP(RequetePIDEP.REQUEST_GET_GR_CONT_REP, strRequete);
            oos.writeObject(req);
            oos.flush();

            ObjectInputStream ois = new ObjectInputStream(CSocket.getInputStream());
            ReponsePIDEP rep = (ReponsePIDEP)ois.readObject();

            if(rep.getCode() == ReponsePIDEP.REPONSE_KO)
                JOptionPane.showMessageDialog(this, (String)rep.getResult());
            else
            {
                HashMap hmList = (HashMap)rep.getResult();
                ArrayList<String> listDestinations = (ArrayList<String>)hmList.get("DESTINATION");
                ArrayList<Short> listCount = (ArrayList<Short>)hmList.get("COUNT");
                
                System.out.println("Taille Destination = " + listDestinations.size() + " =?= " + listCount.size());
                
                DefaultPieDataset dpds = new DefaultPieDataset();
                for(int i = 0; i < listCount.size(); i++)
                    dpds.setValue(listDestinations.get(i), listCount.get(i));
                
                JFreeChart jfc = ChartFactory.createPieChart("Répartition du nombre de containers par destination pour l'année " + (String)cbxAnnee.getSelectedItem(),
                        dpds, true, true, true);
                
                ChartPanel cp = new ChartPanel(jfc);
                JDialog GraphForm = new JDialog(this, true);
                GraphForm.setSize(500, 500);
                GraphForm.setContentPane(cp);
                GraphForm.setTitle("Répartition du nombre de containers par destination pour l'année " + (String)cbxAnnee.getSelectedItem());
                GraphForm.setVisible(true);
            }
        }
        catch (IOException ex)
        {
            Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (ClassNotFoundException ex)
        {
            Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAfficherGraphiqueAnneeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagrammeSectorielForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagrammeSectorielForm dialog = new DiagrammeSectorielForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfficherGraphiqueAnnee;
    private javax.swing.JButton btnAfficherGraphiqueMois;
    private javax.swing.JComboBox cbxAnnee;
    private javax.swing.JComboBox cbxMois;
    private javax.swing.JLabel lblMoisAnnee;
    private javax.swing.JLabel lblMoisAnnee1;
    // End of variables declaration//GEN-END:variables

    public void setComboBoxModelAnnee(DefaultComboBoxModel dcbm)
    {
        cbxAnnee.setModel(dcbm);
    }
    
    public void setComboBoxModelMois(DefaultComboBoxModel dcbm)
    {
        cbxMois.setModel(dcbm);
    }
}
