/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applic_data_analysis;

import RequeteReponsePIDEP.ReponsePIDEP;
import RequeteReponsePIDEP.RequetePIDEP;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Julien
 */
public class ConformityTestForm extends javax.swing.JDialog
{
    private Socket CSocket;
    
    /**
     * Creates new form ConformityTestForm
     */
    public ConformityTestForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Inférence statistiques : test de conformité");
    }
    
    public ConformityTestForm(java.awt.Frame parent, boolean modal, Socket CSocket) {
        super(parent, modal);
        initComponents();
        this.setTitle("Inférence statistiques : test de conformité");
        this.CSocket = CSocket;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombreContainers = new javax.swing.JLabel();
        tfdNombreContainers = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnLancerTestConformite = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblValeurValeurP = new javax.swing.JLabel();
        lblReponseDecision = new javax.swing.JLabel();
        lblValeurP = new javax.swing.JLabel();
        tfdValeurP = new javax.swing.JTextField();
        lblHypotheseNulle = new javax.swing.JLabel();
        lblEnonceHypotheseNulle = new javax.swing.JLabel();
        lblDecision = new javax.swing.JLabel();
        tfdDecision = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblNombreContainers.setText("Entrez le nombre de containers : ");

        btnLancerTestConformite.setText("Lancer le test de conformité");
        btnLancerTestConformite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLancerTestConformiteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Résultat du test de conformité");

        lblValeurP.setText("Valeur-p : ");

        tfdValeurP.setEnabled(false);

        lblHypotheseNulle.setText("Hypothèse nulle : ");

        lblEnonceHypotheseNulle.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        lblEnonceHypotheseNulle.setText("Le temps de stationnement moyen d'un container est de 10 jours");

        lblDecision.setText("Décision : ");

        tfdDecision.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLancerTestConformite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblValeurP)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblValeurValeurP)
                                    .addComponent(lblReponseDecision))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdValeurP))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDecision)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdDecision))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNombreContainers)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfdNombreContainers, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblHypotheseNulle)
                            .addComponent(lblEnonceHypotheseNulle))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreContainers)
                    .addComponent(tfdNombreContainers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLancerTestConformite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblValeurValeurP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblReponseDecision)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblValeurP)
                            .addComponent(tfdValeurP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHypotheseNulle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEnonceHypotheseNulle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDecision)
                            .addComponent(tfdDecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 15, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLancerTestConformiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLancerTestConformiteActionPerformed
        if(!tfdNombreContainers.getText().isEmpty())
        {
            if(Integer.valueOf(tfdNombreContainers.getText()) >= 2)
            {
                String strRequete = tfdNombreContainers.getText();

                try 
                {
                    ObjectOutputStream oos = new ObjectOutputStream(CSocket.getOutputStream());
                    RequetePIDEP req = new RequetePIDEP(RequetePIDEP.REQUEST_GET_STAT_INFER_TEST_CONF, strRequete);
                    oos.writeObject(req);
                    oos.flush();

                    ObjectInputStream ois = new ObjectInputStream(CSocket.getInputStream());
                    ReponsePIDEP rep = (ReponsePIDEP)ois.readObject();

                    if(rep.getCode() == ReponsePIDEP.REPONSE_OK)
                    {
                        String strReponse = (String)rep.getResult();
                        String[] arrayReponse = strReponse.split("#");
                        tfdValeurP.setText(arrayReponse[0]);
                        tfdDecision.setText(arrayReponse[1]);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this, (String)rep.getResult());
                    }
                }
                catch (IOException ex)
                {
                    Logger.getLogger(GetStatDescrContForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                catch (ClassNotFoundException ex)
                {
                    Logger.getLogger(GetStatDescrContForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnLancerTestConformiteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConformityTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConformityTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConformityTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConformityTestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConformityTestForm dialog = new ConformityTestForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLancerTestConformite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDecision;
    private javax.swing.JLabel lblEnonceHypotheseNulle;
    private javax.swing.JLabel lblHypotheseNulle;
    private javax.swing.JLabel lblNombreContainers;
    private javax.swing.JLabel lblReponseDecision;
    private javax.swing.JLabel lblValeurP;
    private javax.swing.JLabel lblValeurValeurP;
    private javax.swing.JTextField tfdDecision;
    private javax.swing.JTextField tfdNombreContainers;
    private javax.swing.JTextField tfdValeurP;
    // End of variables declaration//GEN-END:variables
}
